on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

env:
   PERL_USE_UNSAFE_INC: 0
   AUTHOR_TESTING: 1
   AUTOMATED_TESTING: 1
   RELEASE_TESTING: 1
   PERL_CARTON_PATH: $GITHUB_WORKSPACE/local

jobs:
  linux:
    runs-on: ubuntu-latest

    name: Linux (Perl ${{matrix.perl-version}}, Wasmer ${{matrix.wasmer-version}})

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.36'
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
          - '5.26'
          - '5.24'
          - '5.22'
          - '5.20'
          - '5.18'
          - '5.16'
          - '5.14'
          - '5.12'
          - '5.10'
        wasmer-version:
          - 3.0.1
          - 3.1.0

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@main
      - name: perl -V
        run: perl -V
      - name: Install dependencies
        run: apt install -y libtinfo5
      - run: touch ~/.profile
      - name: Download & unpack Wasmer
        #run: mkdir wasmer && cd wasmer && curl -L https://github.com/wasmerio/wasmer/releases/download/v${{ matrix.wasmer-version }}/wasmer-linux-amd64.tar.gz | tar -xzf -
        run: curl https://get.wasmer.io -sSfL | sh
      - run: source ~/.profile
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: PATH=$PATH:./wasmer/bin perl Makefile.PL
        env:
            WASMER_DIR: ./wasmer
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  mac:
    runs-on: macOS-latest

    name: macOS (Wasmer ${{ matrix.wasmer-version }})

    strategy:
      fail-fast: false
      matrix:
        wasmer-version:
          - 3.1.0

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Set up Perl
        run: brew install cpanminus
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --verbose --notest --installdeps --with-develop --with-configure .
      - name: Download & unpack Wasmer
        run: mkdir wasmer && cd wasmer && curl -L https://github.com/wasmerio/wasmer/releases/download/v${{ matrix.wasmer-version }}/wasmer-darwin-amd64.tar.gz | tar -xzf -
      - run: PATH=$PATH:./wasmer/bin perl Makefile.PL
        env:
            WASMER_DIR: ./wasmer
      - name: make
        run: make
      - name: Run tests (with coverage)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://cpanmin.us | perl - --notest Devel::Cover::Report::Coveralls
          `perl -MConfig -E'print $Config::Config{"sitebin"}'`/cover -test -report Coveralls -ignore_re easyxs

  qemu:
    runs-on: ubuntu-latest

    name: ${{ matrix.platform.container }} (Wasmer ${{ matrix.wasmer-version }})

    strategy:
      fail-fast: false
      matrix:
        wasmer-version:
            - 3.1.0
        platform:
          - container: amd64/alpine
            tarball: musl-amd64
            setup: apk add wget curl perl-app-cpanminus perl-dev make gcc libc-dev
          - container: arm64v8/ubuntu
            tarball: aarch64
            setup: apt update && apt install -y cpanminus gcc curl

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - name: Get the qemu container
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Run tests on ${{ matrix.platform.container }}
        #run: docker run --rm --interactive --mount type=bind,source=$(pwd),target=/host ${{ matrix.platform.container }} sh -c "${{ matrix.platform.setup }}; cd /host; perl -V; mkdir wasmer && cd wasmer && curl -L -v https://github.com/wasmerio/wasmer/releases/download/v${{ matrix.wasmer-version }}/wasmer-linux-${{ matrix.platform.tarball }}.tar.gz | tar -xzf - && cd .. && cpanm --verbose --notest --installdeps --with-configure --with-develop .; PATH=$PATH:./wasmer/bin WASMER_DIR=./wasmer perl Makefile.PL; make -j3 -j3; PERL_DL_NONLAZY=1 prove -wlvmb t"
        run: docker run --rm --interactive --mount type=bind,source=$(pwd),target=/host ${{ matrix.platform.container }} sh -c "${{ matrix.platform.setup }}; curl https://get.wasmer.io -sSfL | sh && cd /host && perl -V && cpanm --verbose --notest --installdeps --with-configure --with-develop .; perl Makefile.PL; make -j3 -j3; PERL_DL_NONLAZY=1 prove -wlvmb t"

#ifndef P5_WASM_WASMER_TABLE
#define P5_WASM_WASMER_TABLE 1

#include "p5_wasm_wasmer.h"
#include "wasmer_extern.xsc"
#include "wasmer_function.xsc"

SV* table_to_sv (pTHX_ SV* creator_sv, wasm_extern_t* export_p) {
    return extern_to_sv(aTHX_ creator_sv, export_p, TABLE_CLASS);
}

wasm_table_size_t table_size (extern_holder_t* holder_p) {
    wasm_extern_t* extern_p = holder_p->extern_p;
    wasm_table_t* table = wasm_extern_as_table(extern_p);

    return wasm_table_size(table);
}

#if 0
static wasm_store_t* _get_store_from_extern_holder (pTHX_ extern_holder_t* holder_p) {
    SV* creator_sv = holder_p->creator_sv;

    SV* store_sv;

    if (sv_derived_from(creator_sv, P5_WASM_WASMER_STORE_CLASS)) {
        store_sv = creator_sv;
    }
    else if (sv_derived_from(creator_sv, P5_WASM_WASMER_INSTANCE_CLASS)) {
        SV* instance_sv = creator_sv;
        instance_holder_t* instance_holder_p = svrv_to_ptr(instance_sv);

        SV* module_sv = instance_holder_p->module_sv;
        module_holder_t* module_holder_p = svrv_to_ptr(module_sv);

        store_sv = module_holder_p->store_sv;
    }
    else {
        croak("Unknown creator: %" SVf, creator_sv);
    }

    store_holder_t* store_holder_p = svrv_to_ptr(store_sv);

    return store_holder_p->store;
}
#endif

# if 0
void table_grow (pTHX_ extern_holder_t* holder_p, wasm_table_size_t delta, extern_holder_t* init_holder_p) {
    wasm_extern_t* extern_p = holder_p->extern_p;
    wasm_table_t* table = wasm_extern_as_table(extern_p);

    // We have no way of checking the table’s type; assume it’s function.

    //wasm_store_t* table_store = _get_store_from_extern_holder(aTHX_ holder_p);

    wasm_ref_t* initref;
    if (init_holder_p) {
        wasm_extern_t* extern_p = init_holder_p->extern_p;
        wasm_func_t* func = wasm_extern_as_func(extern_p);

        initref = wasm_func_as_ref(func);
    }
    else {
        initref = NULL;
    }

    if (!wasm_table_grow(table, delta, initref)) {
        _croak_wasmer_error("Failed to grow table by %u", delta);
    }
}
#endif

# if 0
// Wasmer doesn’t currently expose wasm_table_get().
SV* table_get_sv (pTHX_ SV* self_sv, wasm_table_size_t index) {
    extern_holder_t* holder_p = svrv_to_ptr(aTHX_ self_sv);

    wasm_extern_t* extern_p = holder_p->extern_p;
    wasm_table_t* table = wasm_extern_as_table(extern_p);

    wasm_ref_t* myref = wasm_table_get(table, index);
    assert(myref);  // TODO

    wasm_func_t* myfunc = wasm_ref_as_func(myref);
    assert(myfunc);

    wasm_extern_t* myextern = wasm_func_as_extern(myfunc);

    return function_to_sv( aTHX_ self_sv, myextern );
}
#endif

#endif
